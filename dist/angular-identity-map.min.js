/*! angular-identity-map 18-09-2014 */

!function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(){(function(){"use strict";angular.module("dbaumann.identity-map",[]).provider("IdentityMap",function(){return void(this.$get=function(){var a,b,c;return a={},b=function(a,b){if(null==b&&(b=!1),b&&(!angular.isFunction(a)||null==a.prototype.identity))throw TypeError("expected entity constructor");return angular.isString(a)?a:a.name},c=function(a,b,c){if(null==c&&(c=!0),"object"!=typeof b){if(c)throw TypeError("expected entity");return b}return(angular.isFunction(b.identity)?b:new a(b)).identity()},{set:function(d,e){var f;return null==e&&(e=!1),f=b(d),null==a[f]&&(a[f]={}),function(b){var g;return g=c(d,b),void((null==a[f][g]||e)&&(a[f][g]=b))}},replace:function(a){return function(b){return function(c){return b.set(a,!0)(c)}}(this)},get:function(d){var e;if(e=b(d),null==a[e])throw Error("'"+e+"' collection not found");return function(b){var f;return f=c(d,b,!1),a[e][f]}},update:function(a,d){if(null==d&&(d=[]),b(a),0===d.length)throw Error("no branches provided to IdentityMap.update");return d=d.map(function(a){return angular.isString(a)?[a]:a}),function(b){return function(e){var f,g,h,i,j,k;for(f=c(a,e),g=traverse(b.get(a)(f)),i=traverse(new a(e)),j=0,k=d.length;k>j;j++)h=d[j],g.set(h,i.get(h));return g.value}}(this)}}})})}).call(this)},{}]},{},[1]);
//# sourceMappingURL=angular-identity-map.min.js.map